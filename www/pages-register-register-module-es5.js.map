{"version":3,"sources":["webpack:///src/app/pages/register/register.page.html","webpack:///src/app/pages/register/register.module.ts","webpack:///src/app/pages/register/register.page.scss","webpack:///src/app/pages/register/register.page.ts"],"names":["routes","path","component","RegisterPageModule","imports","forChild","declarations","RegisterPage","fb","auth","alertCtrl","toastCtrl","router","registerForm","group","email","required","password","minLength","nickname","isNicknameAvailable","value","subscribe","res","length","alert","create","header","message","buttons","then","present","signUp","duration","toast","navigateByUrl","err","selector","template"],"mappings":"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","file":"pages-register-register-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/login\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Register</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <form (ngSubmit)=\\\"register()\\\" [formGroup]=\\\"registerForm\\\">\\n    <ion-list>\\n      <ion-item>\\n        <ion-input type=\\\"email\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-input type=\\\"password\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-input placeholder=\\\"Nickname\\\" formControlName=\\\"nickname\\\"></ion-input>\\n      </ion-item>\\n    </ion-list>\\n\\n    <ion-button color=\\\"primary\\\" expand=\\\"full\\\" type=\\\"submit\\\" [disabled]=\\\"!registerForm.valid\\\">Register</ion-button>\\n  </form>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyJ9 */\";","import { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { AlertController, ToastController } from '@ionic/angular';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n  registerForm: FormGroup;\n\n  constructor(private fb: FormBuilder, private auth: AuthService, private alertCtrl: AlertController, private toastCtrl: ToastController, private router: Router) { }\n\n  ngOnInit() {\n    this.registerForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      nickname: ['', Validators.required]\n    });\n  }\n\n  register() {\n    this.auth.isNicknameAvailable(this.registerForm.value.nickname).subscribe(res => {\n      if (res.length > 0) {\n        let alert = this.alertCtrl.create({\n          header: 'Error',\n          message: 'Nickname already taken',\n          buttons: ['OK']\n        });\n        alert.then(alert => alert.present());\n      } else {\n        this.auth.signUp(this.registerForm.value).then(async (res) => {\n          let toast = await this.toastCtrl.create({\n            duration: 3000,\n            message: 'Successfully created new Account!'\n          });\n          toast.present();\n          this.router.navigateByUrl('/chats');\n        }, async (err) => {\n          let alert = await this.alertCtrl.create({\n            header: 'Error',\n            message: err.message,\n            buttons: ['OK']\n          });\n          alert.present();\n        })\n      }\n    })\n  }\n}\n"]}