{"version":3,"sources":["webpack:///src/app/pages/login/login.page.html","webpack:///src/app/pages/login/login.module.ts","webpack:///src/app/pages/login/login.page.scss","webpack:///src/app/pages/login/login.page.ts"],"names":["routes","path","component","LoginPageModule","imports","forChild","declarations","LoginPage","fb","auth","alertCtrl","toastCtrl","router","loginForm","group","email","required","password","minLength","signIn","value","then","res","navigateByUrl","err","create","header","message","buttons","alert","present","inputs","name","placeholder","text","role","handler","data","resetPw","inputAlert","duration","toast","selector","template"],"mappings":"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","file":"pages-login-login-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>Login</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n\\n  <form (ngSubmit)=\\\"login()\\\" [formGroup]=\\\"loginForm\\\">\\n    <ion-list>\\n      <ion-item>\\n        <ion-input type=\\\"email\\\" placeholder=\\\"Email\\\" name=\\\"email\\\" formControlName=\\\"email\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-input type=\\\"password\\\" placeholder=\\\"Password\\\" name=\\\"password\\\" formControlName=\\\"password\\\"></ion-input>\\n      </ion-item>\\n\\n    </ion-list>\\n\\n    <ion-button color=\\\"primary\\\" expand=\\\"full\\\" type=\\\"submit\\\" [disabled]=\\\"!loginForm.valid\\\">Login</ion-button>    \\n  </form>\\n  <ion-row>\\n    <ion-col>\\n      <ion-button color=\\\"light\\\" expand=\\\"full\\\" routerLink=\\\"/register\\\">Create Account</ion-button>\\n    </ion-col>\\n    <ion-col>\\n      <ion-button color=\\\"light\\\" expand=\\\"full\\\" (click)=\\\"openReset()\\\">Reset Password</ion-button>\\n    </ion-col>\\n  </ion-row>\\n    \\n  \\n  \\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\";","import { AuthService } from './../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, EmailValidator } from '@angular/forms';\nimport { AlertController, ToastController } from '@ionic/angular';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  loginForm: FormGroup;\n\n  constructor(private fb: FormBuilder, private auth: AuthService, private alertCtrl: AlertController, private toastCtrl: ToastController, private router: Router) { }\n\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  login() {\n    this.auth.signIn(this.loginForm.value).then((res) => {\n      this.router.navigateByUrl('/chats');\n    }, async (err) => {\n      let alert = await this.alertCtrl.create({\n        header: 'Error',\n        message: err.message,\n        buttons: ['OK']\n      });\n      alert.present();\n    })\n  }\n\n  async openReset() {\n    let inputAlert = await this.alertCtrl.create({\n      header: 'Reset Password',\n      inputs: [\n        {\n          name: 'email',\n          placeholder: 'Email'\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel'\n        },\n        {\n          text: 'Reset',\n          handler: data => {\n            this.resetPw(data.email);\n          }\n        }\n      ]\n    });\n    inputAlert.present();\n  }\n\n  resetPw(email) {\n    this.auth.resetPw(email).then(async (res) => {\n      let toast = await this.toastCtrl.create({\n        duration: 3000,\n        message: 'Success! Check your Emails for more information.'\n      });\n      toast.present();\n    }, async (err) => {\n      let alert = await this.alertCtrl.create({\n        header: 'Error',\n        message: err.message,\n        buttons: ['OK']\n      });\n      alert.present();\n    });\n  }\n}\n"]}