{"version":3,"sources":["webpack:///src/app/pages/start-chat/start-chat.page.html","webpack:///src/app/pages/start-chat/start-chat.module.ts","webpack:///src/app/pages/start-chat/start-chat.page.scss","webpack:///src/app/pages/start-chat/start-chat.page.ts"],"names":["routes","path","component","StartChatPageModule","imports","forChild","declarations","StartChatPage","chatService","router","users","title","participant","participant1","getAllUsers","subscribe","result","items","obs","findUser","res","data","length","indexOf","console","log","push","createGroup","then","navigateByUrl","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSf,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;AAgBA,QAAaC,mBAAmB;AAAA;AAAA,KAAhC;;AAAaA,uBAAmB,6DAT/B,+DAAS;AACRC,aAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,6DAAaC,QAAb,CAAsBL,MAAtB,CAJO,CADD;AAORM,kBAAY,EAAE,CAAC,8DAAD;AAPN,KAAT,CAS+B,GAAnBH,mBAAmB,CAAnB;;;;;;;;;;;;;;;;ACzBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUf,QAAaI,aAAa;AAUxB,6BACUC,WADV,EAEUC,MAFV,EAE0B;AAAA;;AADhB,aAAAD,WAAA,GAAAA,WAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AAVV,aAAAC,KAAA,GAAO,EAAP;AAGA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,WAAA,GAAc,EAAd;AACA,aAAAC,YAAA,GAAe,EAAf;AAK6B;;AAZL;AAAA;AAAA,mCAcb;AAAA;;AACT;AACA,eAAKL,WAAL,CAAiBM,WAAjB,GACCC,SADD,CACW,UAAAC,MAAM,EAAI;AACnB,iBAAI,CAACC,KAAL,GAAaD,MAAb;AACD,WAHD;AAIA;AApBsB;AAAA;AAAA,gCAuBhBH,YAvBgB,EAuBF;AAAA;;AACpB;AACA;AACA,eAAKD,WAAL,GAAmBC,YAAnB;AACA,cAAIK,GAAG,GAAG,KAAKV,WAAL,CAAiBW,QAAjB,CAA0B,KAAKP,WAA/B,CAAV;AACA,gEAASM,GAAT,EAAcH,SAAd,CAAwB,UAAAK,GAAG,EAAI;AAAA,uDACZA,GADY;AAAA;;AAAA;AAC7B,kEAAsB;AAAA,oBAAbC,IAAa;;AACpB,oBAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACnB,sBAAG,MAAI,CAACZ,KAAL,CAAWa,OAAX,CAAmBF,IAAI,CAAC,CAAD,CAAvB,IAA8B,CAAC,CAAlC,EAAqC,CACpC,CADD,MACO;AACLG,2BAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,2BAAO,CAACC,GAAR,CAAYJ,IAAI,CAAC,CAAD,CAAhB;;AACA,0BAAI,CAACX,KAAL,CAAWgB,IAAX,CAAgBL,IAAI,CAAC,CAAD,CAApB;AACD;AACF;AACF;AAV4B;AAAA;AAAA;AAAA;AAAA;;AAW7B,kBAAI,CAACT,WAAL,GAAmB,EAAnB;AACD,WAZD;AAaD;AAzCuB;AAAA;AAAA,sCA2CV;AAAA;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,eAAKJ,WAAL,CAAiBmB,WAAjB,CAA6B,KAAKhB,KAAlC,EAAyC,KAAKD,KAA9C,EAAqDkB,IAArD,CAA0D,UAAAR,GAAG,EAAI;AAC/D,kBAAI,CAACX,MAAL,CAAYoB,aAAZ,CAA0B,QAA1B;AACD,WAFD;AAGA,eAAKnB,KAAL,GAAa,EAAb;AACD;AAtDuB;;AAAA;AAAA,OAA1B;;;;cAWyB;;cACL;;;;AAZPH,iBAAa,6DALzB,gEAAU;AACTuB,cAAQ,EAAE,gBADD;AAETC,cAAQ,EAAR;AAAA;AAAA,0GAFS;;;;AAAA,KAAV,CAKyB,E,+EAWD,kE,EACL,sD,EAZM,GAAbxB,aAAa,CAAb","file":"pages-start-chat-start-chat-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/chats\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>New Chat</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-list>\\n    <ion-item>\\n      <ion-input placeholder=\\\"Group Name\\\" [(ngModel)]=\\\"title\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item-divider>\\n      <ion-label>\\n        Users added to this group\\n      </ion-label>\\n    </ion-item-divider>\\n\\n    <!-- <ion-item>\\n      <ion-input placeholder=\\\"Nickname / Email\\\" [(ngModel)]=\\\"participant\\\"></ion-input>\\n    </ion-item>\\n    <ion-button color=\\\"secondary\\\" expand=\\\"block\\\" (click)=\\\"addUser()\\\">Add User</ion-button> -->\\n\\n    <ion-item *ngFor=\\\"let usr of users\\\">\\n      <ion-label>\\n        {{ usr.email }}\\n        <p>{{ usr.nickname }}</p>\\n      </ion-label>\\n    </ion-item>\\n<!-- getting all users -->\\n<hr>\\n<ion-item-divider>\\n  <ion-label>\\n    Contacts (All Available Users)\\n  </ion-label>\\n</ion-item-divider>\\n  <ion-item *ngFor=\\\"let item of items\\\">\\n        <!-- {{item.payload.doc.data().nickname}} -->\\n        <ion-label>\\n          {{ item.payload.doc.data().email }}\\n          <p>{{ item.payload.doc.data().nickname }}</p>\\n        </ion-label>\\n        <!-- {{item.payload.doc.data().email}} -->\\n        <ion-button icon-only (click)=\\\"addUser(item.payload.doc.data().email)\\\">\\n          <ion-icon name=\\\"add\\\"></ion-icon>\\n        </ion-button>\\n  </ion-item>\\n\\n  </ion-list>\\n</ion-content>\\n\\n<ion-footer>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-button color=\\\"light\\\" expand=\\\"full\\\" fill=\\\"clear\\\" [disabled]=\\\"title == '' || users.length == 0\\\" \\n    (click)=\\\"createGroup()\\\">Start\\n      Group</ion-button>\\n  </ion-toolbar>\\n</ion-footer>\\n\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { StartChatPage } from './start-chat.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StartChatPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [StartChatPage]\n})\nexport class StartChatPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3N0YXJ0LWNoYXQvc3RhcnQtY2hhdC5wYWdlLnNjc3MifQ== */\";","import { ChatService } from './../../services/chat.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { forkJoin } from 'rxjs';\n\n@Component({\n  selector: 'app-start-chat',\n  templateUrl: './start-chat.page.html',\n  styleUrls: ['./start-chat.page.scss'],\n})\nexport class StartChatPage implements OnInit {\n\n  users= [];\n  allusers: Array<any>;\n  items: Array<any>;\n  title = '';\n  participant = '';\n  participant1 = '';\n\n\n  constructor(\n    private chatService: ChatService, \n    private router: Router) { }\n\n  ngOnInit() {\n    //this gets a list of all users\n    this.chatService.getAllUsers()\n    .subscribe(result => {\n      this.items = result;\n    });\n   }\n\n   \n  addUser(participant1) {\n    // console.log(\"when calling addUser function, users array =\");\n    // console.log(this.users);\n    this.participant = participant1;\n    let obs = this.chatService.findUser(this.participant);\n    forkJoin(obs).subscribe(res => {\n      for (let data of res) {\n        if (data.length > 0) {\n          if(this.users.indexOf(data[0]) > -1) {\n          } else {\n            console.log(\"data[0]\");\n            console.log(data[0]);\n            this.users.push(data[0]);\n          }\n        }\n      }\n      this.participant = '';\n    });\n  }\n\n  createGroup() {\n    // console.log(\"this.title\");\n    // console.log(this.title);\n    // console.log(\"this.users\");\n    // console.log(this.users);\n    // console.log(\"users array length: \");\n    // console.log(this.users.length);\n    this.chatService.createGroup(this.title, this.users).then(res => {\n      this.router.navigateByUrl('/chats');\n    });\n    this.users = [];\n  }\n}\n"]}