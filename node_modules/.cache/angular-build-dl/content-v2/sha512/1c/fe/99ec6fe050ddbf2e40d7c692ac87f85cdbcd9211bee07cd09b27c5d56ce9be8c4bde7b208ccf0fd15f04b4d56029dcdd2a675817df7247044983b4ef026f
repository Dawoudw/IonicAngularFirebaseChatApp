{"version":3,"sources":["webpack:///src/app/pages/chats/chats.page.html","webpack:///src/app/pages/chats/chats.module.ts","webpack:///src/app/pages/chats/chats.page.scss","webpack:///src/app/pages/chats/chats.page.ts"],"names":["routes","path","component","ChatsPageModule","imports","forChild","declarations","ChatsPage","auth","router","chatService","users","title","participant","participant1","groups","getGroups","console","log","getAllUsers","subscribe","result","items","obs","findUser","res","data","length","indexOf","push","createGroup","then","navigateByUrl","signOut","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSf,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;AAgBA,QAAaC,eAAe;AAAA;AAAA,KAA5B;;AAAaA,mBAAe,6DAT3B,+DAAS;AACRC,aAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,6DAAaC,QAAb,CAAsBL,MAAtB,CAJO,CADD;AAORM,kBAAY,EAAE,CAAC,qDAAD;AAPN,KAAT,CAS2B,GAAfH,eAAe,CAAf;;;;;;;;;;;;;;;;ACzBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACWf,QAAaI,SAAS;AAUpB,yBACUC,IADV,EAEUC,MAFV,EAGUC,WAHV,EAGoC;AAAA;;AAF1B,aAAAF,IAAA,GAAAA,IAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAC,WAAA,GAAAA,WAAA;AAVV,aAAAC,KAAA,GAAQ,EAAR;AAGA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,WAAA,GAAc,EAAd;AACA,aAAAC,YAAA,GAAe,EAAf;AAKuC;;AAbnB;AAAA;AAAA,mCAeT;AAAA;;AACT;AACA,eAAKC,MAAL,GAAc,KAAKL,WAAL,CAAiBM,SAAjB,EAAd;AACAC,iBAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,iBAAO,CAACC,GAAR,CAAY,KAAKH,MAAjB,EAJS,CAKT;;AACA,eAAKL,WAAL,CAAiBS,WAAjB,GACKC,SADL,CACe,UAAAC,MAAM,EAAI;AACnB,iBAAI,CAACC,KAAL,GAAaD,MAAb;AACL,WAHD;AAID,SAzBmB,CA2BpB;;AA3BoB;AAAA;AAAA,gCA4BZP,YA5BY,EA4BE;AAAA;;AACpB;AACA;AACA,eAAKD,WAAL,GAAmBC,YAAnB;AACA,cAAIS,GAAG,GAAG,KAAKb,WAAL,CAAiBc,QAAjB,CAA0B,KAAKX,WAA/B,CAAV;AACA,gEAASU,GAAT,EAAcH,SAAd,CAAwB,UAAAK,GAAG,EAAI;AAAA,uDACZA,GADY;AAAA;;AAAA;AAC7B,kEAAsB;AAAA,oBAAbC,IAAa;;AACpB,oBAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACnB,sBAAG,MAAI,CAAChB,KAAL,CAAWiB,OAAX,CAAmBF,IAAI,CAAC,CAAD,CAAvB,IAA8B,CAAC,CAAlC,EAAqC,CACpC,CADD,MACO;AACL,0BAAI,CAACf,KAAL,CAAWkB,IAAX,CAAgBH,IAAI,CAAC,CAAD,CAApB;AACD;AACF;AACF;AAR4B;AAAA;AAAA;AAAA;AAAA;;AAS7B,kBAAI,CAACb,WAAL,GAAmB,EAAnB;AACD,WAVD;AAWA,eAAKiB,WAAL;AACD;AA7CmB;AAAA;AAAA,sCA+CN;AAAA;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,eAAKpB,WAAL,CAAiBoB,WAAjB,CAA6B,KAAKlB,KAAlC,EAAyC,KAAKD,KAA9C,EAAqDoB,IAArD,CAA0D,UAAAN,GAAG,EAAI;AAC/D,kBAAI,CAAChB,MAAL,CAAYuB,aAAZ,CAA0B,QAA1B;AACD,WAFD;AAGD;AAzDmB;AAAA;AAAA,sCA2DN,CAEb;AA7DmB;AAAA;AAAA,kCA+DV;AAAA;;AACR,eAAKxB,IAAL,CAAUyB,OAAV,GAAoBF,IAApB,CAAyB,YAAM;AAC7B,kBAAI,CAACtB,MAAL,CAAYuB,aAAZ,CAA0B,QAA1B;AACD,WAFD;AAGD;AAnEmB;;AAAA;AAAA,OAAtB;;;;cAWkB;;cACE;;cACK;;;;AAbZzB,aAAS,6DALrB,gEAAU;AACT2B,cAAQ,EAAE,WADD;AAETC,cAAQ,EAAR;AAAA;AAAA,gGAFS;;;;AAAA,KAAV,CAKqB,E,+EAWJ,kE,EACE,sD,EACK,kE,EAbH,GAAT5B,SAAS,CAAT","file":"pages-chats-chats-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n\\n    </ion-buttons>\\n    <ion-title>Chats</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button routerLink=\\\"/profile\\\">\\n        <ion-icon name=\\\"people\\\" slot=\\\"icon-only\\\"></ion-icon>\\n      </ion-button>\\n      <ion-button (click)=\\\"signOut()\\\">\\n        <ion-icon name=\\\"log-out\\\" slot=\\\"icon-only\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-list>\\n    <ion-item-divider>\\n      <ion-label>\\n        Your Groups\\n      </ion-label>\\n    </ion-item-divider>\\n    <ion-item button *ngFor=\\\"let group of groups | async\\\" class=\\\"ion-text-wrap\\\"\\n    [routerLink]=\\\"['/', 'chat', (group | async)?.id || 0]\\\">\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <ion-text color=\\\"primary\\\">\\n          <h3>{{ (group | async)?.title }}</h3>\\n        </ion-text>\\n        <p>{{ (group | async)?.users.length }} Users</p>\\n      </ion-label>\\n    </ion-item>\\n\\n    <ion-item-divider>\\n      <ion-label>\\n        Contacts (All Available Users)\\n      </ion-label>\\n    </ion-item-divider>\\n    <ion-item *ngFor=\\\"let item of items\\\">\\n      <!-- {{item.payload.doc.data().nickname}} -->\\n      <ion-label>\\n        {{ item.payload.doc.data().email }}\\n        <p>{{ item.payload.doc.data().nickname }}</p>\\n      </ion-label>\\n      <!-- {{item.payload.doc.data().email}} -->\\n      <ion-button icon-only (click)=\\\"addUser(item.payload.doc.data().email,item.payload.doc.data().nickname)\\\">\\n        <ion-icon name=\\\"chatbubble-outline\\\"></ion-icon>\\n      </ion-button>\\n\\n      <!-- <ion-button color=\\\"light\\\" expand=\\\"full\\\" fill=\\\"clear\\\" [disabled]=\\\"title == '' || users.length == 0\\\" \\n    (click)=\\\"createGroup()\\\">Start\\n      Group</ion-button> -->\\n\\n</ion-item>\\n\\n\\n\\n\\n  </ion-list>\\n\\n  \\n</ion-content>\\n\\n<ion-footer>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-button color=\\\"light\\\" fill=\\\"clear\\\" expand=\\\"full\\\" routerLink=\\\"/chats/start\\\">Create a new Group</ion-button>\\n  </ion-toolbar>\\n</ion-footer>\\n\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ChatsPage } from './chats.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChatsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ChatsPage]\n})\nexport class ChatsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NoYXRzL2NoYXRzLnBhZ2Uuc2NzcyJ9 */\";","import { ChatService } from './../../services/chat.service';\nimport { AuthService } from './../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, forkJoin } from 'rxjs';\n\n@Component({\n  selector: 'app-chats',\n  templateUrl: './chats.page.html',\n  styleUrls: ['./chats.page.scss'],\n})\nexport class ChatsPage implements OnInit {\n\n  groups: Observable<any>;\n  users = [];\n  allusers: Array<any>;\n  items: Array<any>;\n  title = '';\n  participant = '';\n  participant1 = '';\n\n  constructor(\n    private auth: AuthService, \n    private router: Router, \n    private chatService: ChatService) { }\n\n  ngOnInit() {\n    //getting list of all available groups\n    this.groups = this.chatService.getGroups();\n    console.log(\"this.groups\");\n    console.log(this.groups);\n    //this gets a list of all users\n    this.chatService.getAllUsers()\n        .subscribe(result => {\n          this.items = result;\n    });\n  }\n\n  //this is for creating a new group when chatting with only one person\n  addUser(participant1) {\n    // console.log(\"when calling addUser function, users array =\");\n    // console.log(this.users);\n    this.participant = participant1;\n    let obs = this.chatService.findUser(this.participant);\n    forkJoin(obs).subscribe(res => {\n      for (let data of res) {\n        if (data.length > 0) {\n          if(this.users.indexOf(data[0]) > -1) {\n          } else {\n            this.users.push(data[0]);\n          }\n        }\n      }\n      this.participant = '';\n    });\n    this.createGroup();\n  }\n\n  createGroup() {\n    // console.log(\"this.title\");\n    // console.log(this.title);\n    // console.log(\"this.users\");\n    // console.log(this.users);\n    // console.log(\"users array length: \");\n    // console.log(this.users.length);\n    this.chatService.createGroup(this.title, this.users).then(res => {\n      this.router.navigateByUrl('/chats');\n    });\n  }\n\n  openProfile() {\n\n  }\n  \n  signOut() {\n    this.auth.signOut().then(() => {\n      this.router.navigateByUrl('/login');\n    });\n  }\n}\n"]}